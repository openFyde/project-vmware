diff --git a/src/gallium/drivers/svga/svga_format.c b/src/gallium/drivers/svga/svga_format.c
old mode 100644
new mode 100755
index c9adee1..c680423
--- a/src/gallium/drivers/svga/svga_format.c
+++ b/src/gallium/drivers/svga/svga_format.c
@@ -2096,12 +2096,14 @@ svga_is_format_supported(struct pipe_screen *screen,
        * multisample with N+1 samples per pixel.
        */
       if ((ss->ms_samples & (1 << (sample_count - 1))) == 0) {
+         debug_printf("format:%d is unsupported by ms_samples:%x, test:%x",format, ss->ms_samples, (1 << (sample_count - 1)));
          return FALSE;
       }
    }
 
    svga_format = svga_translate_format(ss, format, bindings);
    if (svga_format == SVGA3D_FORMAT_INVALID) {
+        debug_printf("format:%d is unsupported by translate", format);
       return FALSE;
    }
 
@@ -2109,6 +2111,7 @@ svga_is_format_supported(struct pipe_screen *screen,
        util_format_is_srgb(format) &&
        (bindings & (PIPE_BIND_DISPLAY_TARGET | PIPE_BIND_RENDER_TARGET))) {
        /* We only support sRGB rendering with vgpu10 */
+      debug_printf("format:%d is unsupported by vgpu10", format);
       return FALSE;
    }
 
@@ -2141,6 +2144,7 @@ svga_is_format_supported(struct pipe_screen *screen,
       case SVGA3D_B8G8R8X8_UNORM_SRGB:
       case SVGA3D_B8G8R8A8_UNORM_SRGB:
       case SVGA3D_R8G8B8A8_UNORM_SRGB:
+      case SVGA3D_R8G8B8A8_UNORM:
          break;
 
       /* Often unsupported/problematic. This means we end up with the same
@@ -2151,6 +2155,7 @@ svga_is_format_supported(struct pipe_screen *screen,
          return FALSE;
 
       default:
+         debug_printf("format:%d is unsupported by switch", format);
          return FALSE;
       }
    }
@@ -2166,6 +2171,7 @@ svga_is_format_supported(struct pipe_screen *screen,
        */
       if (!svga_format_is_integer(svga_format) &&
           (caps.value & SVGA3DFORMAT_OP_NOALPHABLEND)) {
+         debug_printf("format:%d is unsupported by no alphablend", format);
          return FALSE;
       }
    }
